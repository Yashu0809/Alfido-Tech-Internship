# Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Load the dataset
df = pd.read_csv("/Users/yashwanth/Downloads/IRIS.csv")

# Encode target labels
le = LabelEncoder()
df['species_encoded'] = le.fit_transform(df['species'])

# Split features and target
X = df[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]
y = df['species_encoded']

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Decision Tree model
dt_model = DecisionTreeClassifier(random_state=42)
dt_model.fit(X_train, y_train)
dt_preds = dt_model.predict(X_test)

# Logistic Regression model
lr_model = LogisticRegression(max_iter=200)
lr_model.fit(X_train, y_train)
lr_preds = lr_model.predict(X_test)

# Evaluate models
print("Decision Tree Accuracy:", accuracy_score(y_test, dt_preds))
print("Logistic Regression Accuracy:", accuracy_score(y_test, lr_preds))

print("\nClassification Report (Decision Tree):")
print(classification_report(y_test, dt_preds, target_names=le.classes_))

print("\nClassification Report (Logistic Regression):")
print(classification_report(y_test, lr_preds, target_names=le.classes_))
